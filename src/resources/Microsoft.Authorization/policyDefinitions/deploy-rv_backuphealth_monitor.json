{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.21.1.54444",
      "templateHash": "2075451763530601716"
    }
  },
  "parameters": {
    "policyLocation": {
      "type": "string",
      "defaultValue": "centralus"
    },
    "deploymentRoleDefinitionIds": {
      "type": "array",
      "defaultValue": [
        "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c"
      ]
    },
    "parPolicyEffect": {
      "type": "string",
      "defaultValue": "modify",
      "allowedValues": [
        "modify",
        "audit",
        "disabled"
      ]
    },
    "parMonitorDisable": {
      "type": "string",
      "defaultValue": "MonitorDisable"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2022-09-01",
      "name": "[format('{0}-rvbuhm-policyDefinitions', uniqueString(deployment().name))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "Deploy_RecoveryVault_BackupHealthMonitor_Alert"
          },
          "displayName": {
            "value": "Deploy RV Backup Health Monitoring Alerts"
          },
          "description": {
            "value": "Policy to audit/update Recovery Vault Backup Health Alerting to Azure monitor alerts"
          },
          "location": {
            "value": "[parameters('policyLocation')]"
          },
          "metadata": {
            "value": {
              "version": "1.0.0",
              "category": "Site Recovery",
              "source": "https://github.com/Azure/Enterprise-Scale/",
              "alzCloudEnvironments": [
                "AzureCloud"
              ],
              "_deployed_by_alz_monitor": "True"
            }
          },
          "parameters": {
            "value": {
              "effect": {
                "type": "String",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Effect of the policy"
                },
                "allowedValues": [
                  "modify",
                  "audit",
                  "disabled"
                ],
                "defaultValue": "[parameters('parPolicyEffect')]"
              },
              "MonitorDisable": {
                "type": "String",
                "metadata": {
                  "displayName": "Effect",
                  "description": "Tag name to disable monitoring resource. Set to true if monitoring should be disabled"
                },
                "defaultValue": "[parameters('parMonitorDisable')]"
              }
            }
          },
          "policyRule": {
            "value": {
              "if": {
                "allOf": [
                  {
                    "field": "type",
                    "equals": "Microsoft.RecoveryServices/Vaults"
                  },
                  {
                    "field": "[[concat('tags[', parameters('MonitorDisable'), ']')]",
                    "notEquals": "true"
                  },
                  {
                    "field": "Microsoft.RecoveryServices/vaults/monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures",
                    "notEquals": "Enabled"
                  }
                ]
              },
              "then": {
                "effect": "[[parameters('effect')]",
                "details": {
                  "roleDefinitionIds": "[parameters('deploymentRoleDefinitionIds')]",
                  "conflictEffect": "audit",
                  "operations": [
                    {
                      "operation": "addOrReplace",
                      "field": "Microsoft.RecoveryServices/vaults/monitoringSettings.classicAlertSettings.alertsForCriticalOperations",
                      "value": "Disabled"
                    },
                    {
                      "operation": "addOrReplace",
                      "field": "Microsoft.RecoveryServices/vaults/monitoringSettings.azureMonitorAlertSettings.alertsForAllJobFailures",
                      "value": "Enabled"
                    }
                  ]
                }
              }
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.21.1.54444",
              "templateHash": "1917808593565105724"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "maxLength": 64,
              "metadata": {
                "description": "Required. Specifies the name of the policy definition. Maximum length is 64 characters."
              }
            },
            "displayName": {
              "type": "string",
              "defaultValue": "",
              "maxLength": 128,
              "metadata": {
                "description": "Optional. The display name of the policy definition. Maximum length is 128 characters."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The policy definition description."
              }
            },
            "mode": {
              "type": "string",
              "defaultValue": "All",
              "allowedValues": [
                "All",
                "Indexed",
                "Microsoft.KeyVault.Data",
                "Microsoft.ContainerService.Data",
                "Microsoft.Kubernetes.Data"
              ],
              "metadata": {
                "description": "Optional. The policy definition mode. Default is All, Some examples are All, Indexed, Microsoft.KeyVault.Data."
              }
            },
            "metadata": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The policy Definition metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
              }
            },
            "parameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The policy definition parameters that can be used in policy definition references."
              }
            },
            "policyRule": {
              "type": "object",
              "metadata": {
                "description": "Required. The Policy Rule details for the Policy Definition."
              }
            },
            "managementGroupId": {
              "type": "string",
              "defaultValue": "[managementGroup().name]",
              "metadata": {
                "description": "Optional. The group ID of the Management Group. If not provided, will use the current scope for deployment."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]",
              "metadata": {
                "description": "Optional. Location deployment metadata."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "location": "[parameters('location')]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Authorization/policyDefinitions",
              "apiVersion": "2021-06-01",
              "name": "[parameters('name')]",
              "properties": {
                "policyType": "Custom",
                "mode": "[parameters('mode')]",
                "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                "policyRule": "[parameters('policyRule')]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Policy Definition Name."
              },
              "value": "[parameters('name')]"
            },
            "resourceId": {
              "type": "string",
              "metadata": {
                "description": "Policy Definition resource ID."
              },
              "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policyDefinitions', parameters('name'))]"
            },
            "roleDefinitionIds": {
              "type": "array",
              "metadata": {
                "description": "Policy Definition Role Definition IDs."
              },
              "value": "[if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then, 'details'), if(contains(reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details, 'roleDefinitionIds'), reference(extensionResourceId(managementGroup().id, 'Microsoft.Authorization/policyDefinitions', parameters('name')), '2021-06-01').policyRule.then.details.roleDefinitionIds, createArray()), createArray())]"
            }
          }
        }
      }
    }
  ]
}